import runtime;
import ds/tree;
import ds/array;
import ds/set;

inds(a : [int], m : int) -> [Pair<int, int>] {
    map = foldi(a, makeTree(), \i, tree, elem -> treePushToArrayValue(tree, elem, i));
    set2array(foldi(
        a,
        makeSet(),
        \i, set, elem -> {
            val = lookupTree(map, m - elem);
            val ?? fold(val, set, \st, ind -> {
                    if (i < ind)
                        insertSet(st, Pair(i, ind))
                    else if (i > ind)
                        insertSet(st, Pair(ind, i))
                    else
                        st;
                }) : set;
        }
    ));
 }

main() {
    a = [-1,-1,2,1,5,7,7,8,0];
    println(inds(a,7));

    quit(0);
}
